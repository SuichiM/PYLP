program ejercicio_2_kachuka;

process type imprimirNumeroPar (cant: integer; var s : semaphore);
var
    i: integer ;
    aux: integer;
begin
    aux := 2;
    wait(s);
    for i := 0 to cant do
    begin
        writeln('Numero par: ', aux);
        aux := aux + 2 ;
    end;
    writeln(' ');
    signal(s);
end;
process type imprimirNumeroImpar (cant: integer; var s : semaphore);
var
    i: integer ;
    aux: integer;
begin
    aux := 1 ;
    wait(s);
    for i := 0 to cant do
    begin
        writeln('Numero impar: ', aux);
        aux := aux + 2 ;
    end;
    writeln(' ');
    signal(s);
end;

var
    p1, p2 : imprimirNumeroPar ;
    p3 : imprimirNumeroImpar ;
    cantPares : integer ;
    cantImpares: integer;
    sem : semaphore;

begin
    initial(sem, 1); 
    writeln('Ingrese la cantidad de numeros pares a generar: ');
    readln(cantPares);
    writeln('Ingrese la cantidad de numeros impares a generar: ');
    readln(cantImpares);
    cobegin
        p1(cantPares, sem);
        p2(cantPares, sem);
        p3(cantImpares, sem);
    coend;
end.